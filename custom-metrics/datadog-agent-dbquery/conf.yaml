init_config:
  min_collection_interval: 5
instances:
  - server: 'localhost:1521'
    service_name: "ORCLCDB.localdomain" # The Oracle CDB service name
    username: 'c##datadog' ## As created in the Datadog set-up documentation: https://docs.datadoghq.com/database_monitoring/setup_oracle/selfhosted/?tab=multitenant
    password: '<<YOUR_PASSWORD>>'
    reported_hostname: 'COMP-C02DW0E1ML87'  # Optional
    dbm: true
    tags:  # Optional
      - 'service:oracle12'
      - 'env:dev'
    custom_queries:
     - metric_prefix: oracle.custom_query
       query: SELECT 'foo', 88 FROM dual
       columns:
       - name: foo
         type: tag
       - name: event.total
         type: gauge
       tags:
       - test:lloyd
       pdb: ORCLPDB1
       query: SELECT attr1, attr2, attr3, value2 FROM LLOYD.METRICS
       columns:
       - name: attr1
         type: tag
       - name: attr2
         type: tag
       - name: attr3
         type: tag
       - name: value2
         type: gauge
       tags:
       - test:lloyd
       pdb: ORCLPDB1


  ## @param custom_queries - list of mappings - optional
  ## Each query must have 2 fields, and can have a third optional field:
  ##
  ## 1. metric_prefix - Each metric starts with the chosen prefix.
  ## 2. query - The SQL to execute. It can be a simple statement or a multi-line script.
  ##            Use the pipe `|` if you require a multi-line script.
  ## 3. columns - The list representing each column, ordered sequentially from left to right.
  ##              The number of columns must equal the number of columns returned in the query.
  ##              There are 2 required pieces of data:
  ##                a. name - The suffix to append to `metric_prefix` to form
  ##                          the full metric name. If `type` is `tag`, this column is
  ##                          considered a tag and applied to every
  ##                          metric collected by this particular query.
  ##                b. type - The submission method (gauge, monotonic_count, etc.).
  ##                          This can also be set to `tag` to tag each metric in the row
  ##                          with the name and value of the item in this column. You can
  ##                          use the `count` type to perform aggregation for queries that
  ##                          return multiple rows with the same or no tags.
  ##              Columns without a name are ignored. To skip a column, enter:
  ##                - {}
  ## 4. tags (optional) - A list of tags to apply to each metric.
  #
  ## WARNING: Running custom queries may result in additional costs or fees assessed by Oracle.