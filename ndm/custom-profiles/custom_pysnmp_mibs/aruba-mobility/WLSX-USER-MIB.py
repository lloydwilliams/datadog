#
# PySNMP MIB module WLSX-USER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/lloyd.williams/u01/snmp/mibdump/asn1/WLSX-USER-MIB
# Produced by pysmi-0.3.4 at Tue Jan 31 16:14:04 2023
# On host COMP-C02DW0E1ML87 platform Darwin version 21.6.0 by user lloyd.williams
# Using Python version 3.11.1 (v3.11.1:a7a450f84a, Dec  6 2022, 15:24:06) [Clang 13.0.0 (clang-1300.0.29.30)]
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaPhyType, ArubaAuthenticationMethods, ArubaUserForwardMode, ArubaSubAuthenticationMethods, ArubaEncryptionType, ArubaHTMode = mibBuilder.importSymbols("ARUBA-TC", "ArubaPhyType", "ArubaAuthenticationMethods", "ArubaUserForwardMode", "ArubaSubAuthenticationMethods", "ArubaEncryptionType", "ArubaHTMode")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, ObjectIdentity, Counter64, iso, Bits, MibIdentifier, Integer32, Counter32, Gauge32, ModuleIdentity, snmpModules, Unsigned32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "Counter64", "iso", "Bits", "MibIdentifier", "Integer32", "Counter32", "Gauge32", "ModuleIdentity", "snmpModules", "Unsigned32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TestAndIncr, StorageType, MacAddress, TDomain, TextualConvention, TAddress, DisplayString, TruthValue, PhysAddress, TimeInterval, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TestAndIncr", "StorageType", "MacAddress", "TDomain", "TextualConvention", "TAddress", "DisplayString", "TruthValue", "PhysAddress", "TimeInterval", "RowStatus")
wlanESSID, = mibBuilder.importSymbols("WLSX-WLAN-MIB", "wlanESSID")
wlsxUserMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4))
wlsxUserMIB.setRevisions(('1910-01-26 18:06',))
if mibBuilder.loadTexts: wlsxUserMIB.setLastUpdated('1001261806Z')
if mibBuilder.loadTexts: wlsxUserMIB.setOrganization('Aruba Wireless Networks')
wlsxUserAllInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1))
wlsxTotalNumOfUsers = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxTotalNumOfUsers.setStatus('current')
wlsxUserTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2), )
if mibBuilder.loadTexts: wlsxUserTable.setStatus('current')
wlsxUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1), ).setIndexNames((0, "WLSX-USER-MIB", "nUserPhyAddress"), (0, "WLSX-USER-MIB", "nUserIpAddress"))
if mibBuilder.loadTexts: wlsxUserEntry.setStatus('current')
nUserPhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: nUserPhyAddress.setStatus('current')
nUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: nUserIpAddress.setStatus('current')
nUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserName.setStatus('current')
nUserRole = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserRole.setStatus('current')
nUserUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserUpTime.setStatus('current')
nUserAuthenticationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 6), ArubaAuthenticationMethods()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserAuthenticationMethod.setStatus('current')
nUserSubAuthenticationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 7), ArubaSubAuthenticationMethods()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserSubAuthenticationMethod.setStatus('current')
nUserAuthServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserAuthServerName.setStatus('current')
nUserExtVPNAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserExtVPNAddress.setStatus('current')
nUserApLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserApLocation.setStatus('current')
nUserApBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserApBSSID.setStatus('current')
nUserIsOnHomeAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserIsOnHomeAgent.setStatus('deprecated')
nUserHomeAgentIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserHomeAgentIpAddress.setStatus('deprecated')
nUserMobilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("visitor", 1), ("away", 2), ("associated", 3), ("wired", 4), ("wireless", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserMobilityStatus.setStatus('current')
nUserHomeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserHomeVlan.setStatus('deprecated')
nUserDefaultVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserDefaultVlan.setStatus('current')
nUserAssignedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserAssignedVlan.setStatus('current')
nUserBWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserBWContractName.setStatus('deprecated')
nUserBWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserBWContractUsage.setStatus('deprecated')
nUserBWContractId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserBWContractId.setStatus('deprecated')
nUserIsProxyArpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserIsProxyArpEnabled.setStatus('current')
nUserCurrentVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserCurrentVlan.setStatus('current')
nUserIsWired = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserIsWired.setStatus('current')
nUserConnectedSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserConnectedSlot.setStatus('current')
nUserConnectedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserConnectedPort.setStatus('current')
nUserPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 26), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserPhyType.setStatus('current')
nUserMobilityDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserMobilityDomainName.setStatus('current')
nUserUPBWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserUPBWContractName.setStatus('current')
nUserUPBWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserUPBWContractUsage.setStatus('current')
nUserUPBWContractId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserUPBWContractId.setStatus('current')
nUserDNBWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserDNBWContractName.setStatus('current')
nUserDNBWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserDNBWContractUsage.setStatus('current')
nUserDNBWContractId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserDNBWContractId.setStatus('current')
nUserHTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 34), ArubaHTMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserHTMode.setStatus('current')
nUserEncryptionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 35), ArubaEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserEncryptionMethod.setStatus('current')
nUserForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 36), ArubaUserForwardMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserForwardMode.setStatus('current')
nUserDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserDeviceID.setStatus('current')
nUserConnectedModule = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserConnectedModule.setStatus('current')
nUserDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserDeviceType.setStatus('current')
nUserRxDataPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserRxDataPkts64.setStatus('current')
nUserTxDataPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserTxDataPkts64.setStatus('current')
nUserRxDataOctets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserRxDataOctets64.setStatus('current')
nUserTxDataOctets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUserTxDataOctets64.setStatus('current')
nVIAUserDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 2, 1, 44), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nVIAUserDeviceID.setStatus('current')
wlsxUserSessionTimeTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 3), )
if mibBuilder.loadTexts: wlsxUserSessionTimeTable.setStatus('current')
wlsxUserSessionTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 3, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanESSID"), (0, "WLSX-USER-MIB", "wlsxUserSessionTimeLength"))
if mibBuilder.loadTexts: wlsxUserSessionTimeEntry.setStatus('current')
wlsxUserSessionTimeLength = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: wlsxUserSessionTimeLength.setStatus('current')
wlsxUserSessionTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxUserSessionTimeCount.setStatus('current')
wlsxUserStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 4))
wlsxNumOfUsers8021x = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxNumOfUsers8021x.setStatus('current')
wlsxNumOfUsersVPN = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 4, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxNumOfUsersVPN.setStatus('current')
wlsxNumOfUsersCP = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 4, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxNumOfUsersCP.setStatus('current')
wlsxNumOfUsersMAC = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxNumOfUsersMAC.setStatus('current')
wlsxNumOfUsersStateful8021x = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 4, 1, 4, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxNumOfUsersStateful8021x.setStatus('current')
mibBuilder.exportSymbols("WLSX-USER-MIB", nUserRxDataPkts64=nUserRxDataPkts64, nUserAssignedVlan=nUserAssignedVlan, nUserCurrentVlan=nUserCurrentVlan, nUserRole=nUserRole, nUserMobilityStatus=nUserMobilityStatus, nUserIsWired=nUserIsWired, nUserDeviceType=nUserDeviceType, wlsxTotalNumOfUsers=wlsxTotalNumOfUsers, wlsxUserSessionTimeCount=wlsxUserSessionTimeCount, nUserPhyAddress=nUserPhyAddress, nUserTxDataOctets64=nUserTxDataOctets64, nUserMobilityDomainName=nUserMobilityDomainName, nUserEncryptionMethod=nUserEncryptionMethod, wlsxUserTable=wlsxUserTable, nUserHTMode=nUserHTMode, nUserUpTime=nUserUpTime, wlsxUserSessionTimeEntry=wlsxUserSessionTimeEntry, wlsxNumOfUsersVPN=wlsxNumOfUsersVPN, nUserAuthenticationMethod=nUserAuthenticationMethod, nUserUPBWContractName=nUserUPBWContractName, wlsxUserMIB=wlsxUserMIB, wlsxUserStatsGroup=wlsxUserStatsGroup, nUserIsOnHomeAgent=nUserIsOnHomeAgent, nUserAuthServerName=nUserAuthServerName, nUserApLocation=nUserApLocation, PYSNMP_MODULE_ID=wlsxUserMIB, nVIAUserDeviceID=nVIAUserDeviceID, wlsxNumOfUsersCP=wlsxNumOfUsersCP, wlsxNumOfUsers8021x=wlsxNumOfUsers8021x, nUserPhyType=nUserPhyType, nUserTxDataPkts64=nUserTxDataPkts64, nUserHomeAgentIpAddress=nUserHomeAgentIpAddress, wlsxUserAllInfoGroup=wlsxUserAllInfoGroup, nUserHomeVlan=nUserHomeVlan, nUserDNBWContractId=nUserDNBWContractId, nUserBWContractName=nUserBWContractName, wlsxUserSessionTimeTable=wlsxUserSessionTimeTable, nUserName=nUserName, nUserIpAddress=nUserIpAddress, wlsxUserEntry=wlsxUserEntry, nUserUPBWContractId=nUserUPBWContractId, nUserBWContractId=nUserBWContractId, nUserApBSSID=nUserApBSSID, nUserRxDataOctets64=nUserRxDataOctets64, nUserConnectedModule=nUserConnectedModule, nUserIsProxyArpEnabled=nUserIsProxyArpEnabled, nUserDNBWContractUsage=nUserDNBWContractUsage, nUserForwardMode=nUserForwardMode, wlsxNumOfUsersStateful8021x=wlsxNumOfUsersStateful8021x, nUserDNBWContractName=nUserDNBWContractName, nUserConnectedSlot=nUserConnectedSlot, nUserUPBWContractUsage=nUserUPBWContractUsage, nUserSubAuthenticationMethod=nUserSubAuthenticationMethod, wlsxUserSessionTimeLength=wlsxUserSessionTimeLength, wlsxNumOfUsersMAC=wlsxNumOfUsersMAC, nUserExtVPNAddress=nUserExtVPNAddress, nUserDeviceID=nUserDeviceID, nUserDefaultVlan=nUserDefaultVlan, nUserBWContractUsage=nUserBWContractUsage, nUserConnectedPort=nUserConnectedPort)
