#
# PySNMP MIB module AI-AP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/lloyd.williams/u01/snmp/mibdump/asn1/AI-AP-MIB
# Produced by pysmi-0.3.4 at Tue Jan 31 16:13:51 2023
# On host COMP-C02DW0E1ML87 platform Darwin version 21.6.0 by user lloyd.williams
# Using Python version 3.11.1 (v3.11.1:a7a450f84a, Dec  6 2022, 15:24:06) [Clang 13.0.0 (clang-1300.0.29.30)]
#
aiEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "aiEnterpriseMibModules")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, ObjectIdentity, iso, TimeTicks, Unsigned32, snmpModules, Counter64, Gauge32, Counter32, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "iso", "TimeTicks", "Unsigned32", "snmpModules", "Counter64", "Gauge32", "Counter32", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "NotificationType")
TextualConvention, DateAndTime, TimeInterval, TestAndIncr, MacAddress, DisplayString, StorageType, PhysAddress, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "TimeInterval", "TestAndIncr", "MacAddress", "DisplayString", "StorageType", "PhysAddress", "TruthValue", "RowStatus")
aiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1))
aiMIB.setRevisions(('1908-04-16 02:06',))
if mibBuilder.loadTexts: aiMIB.setLastUpdated('0804160206Z')
if mibBuilder.loadTexts: aiMIB.setOrganization('Aruba Wireless Networks')
class ArubaEnableValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class ArubaFrameType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("associateRequest", 0), ("associateResponse", 1), ("reassociateRequest", 2), ("reassociateResponse", 3), ("probeRequest", 4), ("probeResponse", 5), ("beacon", 8), ("atim", 9), ("disassociate", 10), ("auth", 11), ("deauth", 12))

class ArubaPhyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("dot11a", 1), ("dot11b", 2), ("dot11g", 3), ("dot11ag", 4), ("wired", 5))

class ArubaHTMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("ht20", 2), ("ht40", 3))

class ArubaHTExtChannel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("above", 2), ("below", 3))

class ArubaMonEncryptionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("open", 0), ("wep", 1), ("wpa", 2), ("wpa2", 3))

class ArubaMonEncryptionCipher(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 0), ("wep40", 1), ("wep104", 2), ("tkip", 3), ("aesccmp", 4), ("other", 5))

class ArubaMonAuthAlgorithm(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("psk", 1), ("dot1x", 2), ("other", 3))

class ArubaSwitchRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("master", 1), ("local", 2), ("backupmaster", 3))

class ArubaSupportStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unsupported", 1), ("supported", 2))

class ArubaActiveState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("inactive", 2))

class ArubaACLDomain(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("alias", 1), ("any", 2), ("user", 3), ("host", 4), ("network", 5))

class ArubaACLNetworkServiceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("alias", 1), ("any", 2), ("tcp", 3), ("udp", 4), ("protocol", 5))

class ArubaACLAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("deny", 1), ("permit", 2), ("srcNAT", 3), ("dstNAT", 4), ("redirect", 5))

class ArubaDaysOfWeek(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("sun", 1), ("mon", 2), ("tue", 3), ("wed", 4), ("thu", 5), ("fri", 6), ("sat", 7))

class ArubaAuthenticationMethods(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 7, 15, 16, 17, 28, 255))
    namedValues = NamedValues(("none", 0), ("web", 1), ("mac", 2), ("vpn", 3), ("dot1x", 4), ("kerberos", 5), ("secureId", 7), ("pubcookie", 15), ("xSec", 16), ("xSecMachine", 17), ("via-vpn", 28), ("other", 255))

class ArubaSubAuthenticationMethods(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("authPAP", 1), ("authCHAP", 2), ("authMSCHAP", 3), ("authMSCHAPv2", 4), ("eapTLS", 5), ("eapTTLS", 6), ("eapLEAP", 7), ("eapMD5", 8), ("eapPEAP", 9))

class ArubaEncryptionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("none", 0), ("static-wep", 1), ("dynamic-wep", 2), ("wpa-psk-tkip", 3), ("wpa-tkip", 4), ("wpa-psk-aes", 5), ("wpa-aes", 6), ("wpa2-psk-tkip", 7), ("wpa2-tkip", 8), ("wpa2-psk-aes", 9), ("wpa2-aes", 10), ("xSec", 11), ("bSec-128", 12), ("bSec-256", 13), ("aes-128-cmac", 14), ("unknown", 15))

class ArubaUserForwardMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("tunnel-encrypted", 0), ("bridge", 1), ("tunnel-decrypted", 2), ("split-tunnel", 3))

class ArubaRogueApType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("valid", 1), ("interfering", 2), ("unsecure", 3), ("dos", 4), ("unknown", 5), ("knownInterfering", 6), ("suspectedUnsecure", 7))

class ArubaAPMatchType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("unknown", 0), ("configuredWiredMac", 1), ("ethernetWiredMac", 2), ("apWiredMac", 3), ("externalWiredMac", 4), ("manual", 5), ("baseBSSIDOverride", 6), ("mms", 7), ("ethernetGatewayWiredMac", 8), ("classificationDisabled", 9), ("apBSSID", 10), ("propagatedEthernetWiredMac", 11), ("apRule", 12), ("systemWiredMac", 13), ("systemGatewayMac", 14))

class ArubaAPMatchMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("notApplicable", 0), ("exactMatch", 1), ("plusOneMatch", 2), ("minusOneMatch", 3), ("ouiMatch", 4))

class ArubaStationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("valid", 1), ("interfering", 2), ("dos", 3))

class ArubaEncryptionMethods(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("disabled", 0), ("static-wep", 1), ("dynamic-wep", 2), ("static-wpa", 3), ("dynamic-wpa", 4), ("wpa2-psk-aes", 5), ("wpa2-8021x-aes", 6), ("wpa2PreAuth", 7), ("xsec", 8), ("wpa-psk-aes", 9), ("wpa-aes", 10), ("wpa2-psk-tkip", 11), ("wpa2-8021x-tkip", 12))

class ArubaHashAlgorithms(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("md5", 1), ("sha", 2))

class ArubaVlanValidRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4095)

class ArubaPortMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("access", 1), ("dot1q", 2))

class ArubaDot1dState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("disabled", 1), ("blocked", 2), ("listening", 3), ("learning", 4), ("forwarding", 5))

class ArubaPoeState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("disabled", 1), ("enabled", 2), ("enabledCisco", 3), ("notAvailable", 4))

class ArubaCardType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("lc1", 1), ("lc2", 2), ("sc1", 3), ("sc2", 4), ("sw2400", 5), ("sw800", 6), ("sw200", 7), ("m3mk1", 8), ("sw3200", 9), ("sw3400", 10), ("sw3600", 11), ("sw650", 12), ("sw651", 13), ("reserved1", 14), ("reserved2", 15), ("sw620", 16))

class ArubaESIServerMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("bridged", 1), ("routed", 2), ("nat", 3))

class ArubaESIServerStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

class ArubaIfType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("port", 1), ("vlan", 2), ("tunnel", 3), ("loopback", 4))

class ArubaVoipProtocolType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 10))
    namedValues = NamedValues(("sccp", 1), ("svp", 2), ("vocera", 3), ("sip", 4), ("unknown", 10))

class ArubaAccessPointMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("airMonitor", 1), ("accessPoint", 2), ("accessPointAndMonitor", 3), ("meshPortal", 4), ("meshPoint", 5), ("rfprotectSensor", 6), ("spectrumSensor", 7))

class ArubaAuthServerType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("internaldb", 1), ("radius", 2), ("ldap", 3), ("kerberos", 4), ("tacacs", 5))

class ArubaAddressType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("srcAddress", 1), ("dstAddress", 2), ("bssid", 3))

class ArubaBlackListReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 100))
    namedValues = NamedValues(("userDefined", 1), ("mitmAttack", 2), ("authFailure", 3), ("pingFlood", 4), ("sessionFlood", 5), ("synFlood", 6), ("sessionBlacklist", 7), ("ipSpoofing", 8), ("esiBlacklist", 9), ("other", 100))

class ArubaDBType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("mssql", 1), ("mysql", 2))

class ArubaVrrpState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("initialize", 1), ("backup", 2), ("master", 3))

class ArubaOperStateValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("up", 1), ("down", 2), ("testing", 3))

class ArubaAntennaSetting(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("notPresent", 1), ("enabled", 2), ("disabled", 3))

class ArubaAPStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

class ArubaPortSpeed(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("speed10Mbps", 1), ("speed100Mbps", 2), ("speed1000Mbps", 3), ("speedAuto", 4), ("speed10Gbps", 5))

class ArubaPortDuplex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("half", 1), ("full", 2), ("auto", 3))

class ArubaPortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("fastethernet", 1), ("gigabitethernet", 2), ("xgigabitethernet", 3))

class ArubaEnet1Mode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("activeStandby", 1), ("tunnel", 2), ("bridge", 3), ("notApplicable", 4), ("split", 5))

class ArubaUnprovisionedStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("yes", 1), ("no", 2))

class ArubaMonitorMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("all", 1), ("none", 2), ("mixed", 3))

class ArubaConfigurationState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("success", 1), ("error", 2))

class ArubaConfigurationChangeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("create", 1), ("delete", 2), ("modify", 3))

class ArubaCallStates(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("idle", 0), ("initiated", 1), ("connecting", 2), ("delivered", 3), ("connected", 4), ("offered", 5), ("alerting", 6), ("releasing", 7), ("cancelling", 8), ("challenging", 9), ("transient", 10), ("blockwait", 11), ("succ", 12), ("fail", 13), ("aborted", 14), ("blocked", 15))

class ArubaVoipProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9, 11))
    namedValues = NamedValues(("sccp", 1), ("svp", 2), ("vocera", 3), ("sip", 9), ("ua", 11))

class ArubaVoipRegState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("registering", 1), ("unregistering", 2), ("challenge", 3), ("registered", 4), ("unregistered", 5))

class ArubaVoiceCdrDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("og", 0), ("ic", 1))

class ArubaVoiceCacBit(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("cacActiveLoadBalancing", 0), ("cacHighCapThresholdReached", 1), ("cacHandRsrvThresholdReached", 2), ("cacPeakCapacityReached", 3))

class ArubaMeshRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("nonmesh", 0), ("point", 1), ("portal", 2))

class ArubaHTRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))
    namedValues = NamedValues(("unknown", 0), ("ht6dot5", 1), ("ht13", 2), ("ht13dot5", 3), ("ht15", 4), ("ht19dot5", 5), ("ht26", 6), ("ht27", 7), ("ht30", 8), ("ht39", 9), ("ht40dot5", 10), ("ht45", 11), ("ht52", 12), ("ht54", 13), ("ht58dot5", 14), ("ht60", 15), ("ht65", 16), ("ht78", 17), ("ht81", 18), ("ht90", 19), ("ht104", 20), ("ht108", 21), ("ht117", 22), ("ht120", 23), ("ht121dot5", 24), ("ht130", 25), ("ht135", 26), ("ht150", 27), ("ht162", 28), ("ht180", 29), ("ht216", 30), ("ht240", 31), ("ht243", 32), ("ht270", 33), ("ht300", 34))

class ArubaUSBStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("notPresent", 1), ("inactive", 2), ("active", 3))

class ArubaARMChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))
    namedValues = NamedValues(("radarDetected", 1), ("radarCleared", 2), ("txHang", 3), ("txHangClear", 4), ("fortyMhzIntol", 5), ("cancel40mhzIntol", 6), ("fortyMhzAlign", 7), ("armInterference", 8), ("armInvalidCh", 9), ("armErrorThresh", 10), ("armNoiseThresh", 11), ("armEmptyCh", 12), ("armRogueCont", 13), ("armDecreasePower", 14), ("armIncreasePower", 15), ("armTurnOffRadio", 16), ("armTurnOnRadio", 17))

class ArubaAPMasterStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("up", 1), ("down", 2), ("move", 3))

class ArubaAPUplinkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("ethernet", 1), ("usb", 2), ("pppoe", 3), ("wifi", 4))

class ArubaAPUplinkChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("linkFailure", 1), ("vpnFailure", 2), ("preemption", 3), ("internetFailover", 4))

class ArubaPortalServerDownReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("connectFail", 1))

aiInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1))
aiStateGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2))
aiManagedInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 3))
aiVirtualControllerKey = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiVirtualControllerKey.setStatus('current')
aiVirtualControllerName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiVirtualControllerName.setStatus('current')
aiVirtualControllerOrganization = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiVirtualControllerOrganization.setStatus('current')
aiVirtualControllerVersion = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiVirtualControllerVersion.setStatus('current')
aiVirtualControllerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiVirtualControllerIPAddress.setStatus('current')
aiMasterIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMasterIPAddress.setStatus('current')
aiWlanSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 7), )
if mibBuilder.loadTexts: aiWlanSSIDTable.setStatus('current')
aiWlanSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 7, 1), ).setIndexNames((0, "AI-AP-MIB", "aiSSIDIndex"))
if mibBuilder.loadTexts: aiWlanSSIDEntry.setStatus('current')
aiSSIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSSIDIndex.setStatus('current')
aiSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSSID.setStatus('current')
aiSSIDStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSSIDStatus.setStatus('current')
aiAccessPointTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1), )
if mibBuilder.loadTexts: aiAccessPointTable.setStatus('current')
aiAccessPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1), ).setIndexNames((0, "AI-AP-MIB", "aiAPMACAddress"))
if mibBuilder.loadTexts: aiAccessPointEntry.setStatus('current')
aiAPMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPMACAddress.setStatus('current')
aiAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPName.setStatus('current')
aiAPIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPIPAddress.setStatus('current')
aiAPSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPSerialNum.setStatus('current')
aiAPModel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPModel.setStatus('current')
aiAPModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPModelName.setStatus('current')
aiAPCPUUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPCPUUtilization.setStatus('current')
aiAPMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPMemoryFree.setStatus('current')
aiAPUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPUptime.setStatus('current')
aiAPTotalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPTotalMemory.setStatus('current')
aiAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiAPStatus.setStatus('current')
aiRadioTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2), )
if mibBuilder.loadTexts: aiRadioTable.setStatus('current')
aiRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1), ).setIndexNames((0, "AI-AP-MIB", "aiRadioAPMACAddress"), (0, "AI-AP-MIB", "aiRadioIndex"))
if mibBuilder.loadTexts: aiRadioEntry.setStatus('current')
aiRadioAPMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioAPMACAddress.setStatus('current')
aiRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioIndex.setStatus('current')
aiRadioMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioMACAddress.setStatus('current')
aiRadioChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioChannel.setStatus('current')
aiRadioTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioTransmitPower.setStatus('current')
aiRadioNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioNoiseFloor.setStatus('current')
aiRadioUtilization4 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioUtilization4.setStatus('current')
aiRadioUtilization64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioUtilization64.setStatus('current')
aiRadioTxTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioTxTotalFrames.setStatus('current')
aiRadioTxMgmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioTxMgmtFrames.setStatus('current')
aiRadioTxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioTxDataFrames.setStatus('current')
aiRadioTxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioTxDataBytes.setStatus('current')
aiRadioTxDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioTxDrops.setStatus('current')
aiRadioRxTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioRxTotalFrames.setStatus('current')
aiRadioRxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioRxDataFrames.setStatus('current')
aiRadioRxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioRxDataBytes.setStatus('current')
aiRadioRxMgmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioRxMgmtFrames.setStatus('current')
aiRadioRxBad = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioRxBad.setStatus('current')
aiRadioPhyEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioPhyEvents.setStatus('current')
aiRadioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRadioStatus.setStatus('current')
aiWlanTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3), )
if mibBuilder.loadTexts: aiWlanTable.setStatus('current')
aiWlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1), ).setIndexNames((0, "AI-AP-MIB", "aiWlanAPMACAddress"), (0, "AI-AP-MIB", "aiWlanIndex"))
if mibBuilder.loadTexts: aiWlanEntry.setStatus('current')
aiWlanAPMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanAPMACAddress.setStatus('current')
aiWlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanIndex.setStatus('current')
aiWlanESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanESSID.setStatus('current')
aiWlanMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanMACAddress.setStatus('current')
aiWlanTxTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanTxTotalFrames.setStatus('current')
aiWlanTxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanTxDataFrames.setStatus('current')
aiWlanTxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanTxDataBytes.setStatus('current')
aiWlanRxTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanRxTotalFrames.setStatus('current')
aiWlanRxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanRxDataFrames.setStatus('current')
aiWlanRxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiWlanRxDataBytes.setStatus('current')
aiClientTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4), )
if mibBuilder.loadTexts: aiClientTable.setStatus('current')
aiClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1), ).setIndexNames((0, "AI-AP-MIB", "aiClientMACAddress"))
if mibBuilder.loadTexts: aiClientEntry.setStatus('current')
aiClientMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientMACAddress.setStatus('current')
aiClientWlanMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientWlanMACAddress.setStatus('current')
aiClientIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientIPAddress.setStatus('current')
aiClientAPIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientAPIPAddress.setStatus('current')
aiClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientName.setStatus('current')
aiClientOperatingSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientOperatingSystem.setStatus('current')
aiClientSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientSNR.setStatus('current')
aiClientTxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientTxDataFrames.setStatus('current')
aiClientTxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientTxDataBytes.setStatus('current')
aiClientTxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientTxRetries.setStatus('current')
aiClientTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientTxRate.setStatus('current')
aiClientRxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientRxDataFrames.setStatus('current')
aiClientRxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientRxDataBytes.setStatus('current')
aiClientRxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientRxRetries.setStatus('current')
aiClientRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientRxRate.setStatus('current')
aiClientUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 4, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientUptime.setStatus('current')
aiVoiceClientTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 5), )
if mibBuilder.loadTexts: aiVoiceClientTable.setStatus('current')
aiVoiceClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 5, 1), ).setIndexNames((0, "AI-AP-MIB", "aiClientMac"))
if mibBuilder.loadTexts: aiVoiceClientEntry.setStatus('current')
aiClientMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientMac.setStatus('current')
aiClientIP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientIP.setStatus('current')
aiClientAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 5, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientAPMac.setStatus('current')
aiClientAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 2, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiClientAPName.setStatus('current')
aiManagedModeSinceLastSync = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiManagedModeSinceLastSync.setStatus('current')
aiTrapsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200))
aiTrapObjectsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1))
aiTrapDefinitionsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2))
wlsxTrapAPMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPMacAddress.setStatus('current')
wlsxTrapAPIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPIpAddress.setStatus('current')
wlsxTrapAPBSSID = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPBSSID.setStatus('current')
wlsxTrapEssid = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapEssid.setStatus('current')
wlsxTrapTargetAPBSSID = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 5), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTargetAPBSSID.setStatus('current')
wlsxTrapTargetAPSSID = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTargetAPSSID.setStatus('current')
wlsxTrapTargetAPChannel = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTargetAPChannel.setStatus('current')
wlsxTrapNodeMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapNodeMac.setStatus('current')
wlsxTrapSourceMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 9), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSourceMac.setStatus('current')
wlsxReceiverMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 10), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxReceiverMac.setStatus('current')
wlsxTrapTransmitterMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 11), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTransmitterMac.setStatus('current')
wlsxTrapReceiverMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 12), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapReceiverMac.setStatus('current')
wlsxTrapSnr = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 13), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSnr.setStatus('current')
wlsxTrapSignatureName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSignatureName.setStatus('current')
wlsxTrapFrameType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 15), ArubaFrameType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapFrameType.setStatus('current')
wlsxTrapAddressType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 16), ArubaAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAddressType.setStatus('current')
wlsxTrapAPLocation = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPLocation.setStatus('current')
wlsxTrapAPChannel = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 18), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPChannel.setStatus('current')
wlsxTrapAPTxPower = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 19), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPTxPower.setStatus('current')
wlsxTrapMatchedMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 20), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapMatchedMac.setStatus('current')
wlsxTrapMatchedIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 21), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapMatchedIp.setStatus('current')
wlsxTrapRogueIfoURL = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapRogueIfoURL.setStatus('current')
wlsxTrapVlanId = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 23), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVlanId.setStatus('current')
wlsxTrapAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 24), ArubaEnableValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAdminStatus.setStatus('current')
wlsxTrapOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 25), ArubaOperStateValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapOperStatus.setStatus('current')
wlsxTrapAuthServerName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAuthServerName.setStatus('current')
wlsxTrapAuthServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 27), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAuthServerTimeout.setStatus('current')
wlsxTrapCardSlot = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 28), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapCardSlot.setStatus('current')
wlsxTrapTemperatureValue = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTemperatureValue.setStatus('current')
wlsxTrapProcessName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapProcessName.setStatus('current')
wlsxTrapFanNumber = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 31), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapFanNumber.setStatus('current')
wlsxTrapVoltageType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVoltageType.setStatus('current')
wlsxTrapVoltageValue = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVoltageValue.setStatus('current')
wlsxTrapStationBlackListReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 34), ArubaBlackListReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapStationBlackListReason.setStatus('current')
wlsxTrapSpoofedIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 35), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSpoofedIpAddress.setStatus('current')
wlsxTrapSpoofedOldPhyAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 36), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSpoofedOldPhyAddress.setStatus('current')
wlsxTrapSpoofedNewPhyAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 37), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSpoofedNewPhyAddress.setStatus('current')
wlsxTrapDBName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapDBName.setStatus('current')
wlsxTrapDBUserName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapDBUserName.setStatus('current')
wlsxTrapDBIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapDBIpAddress.setStatus('current')
wlsxTrapDBType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 41), ArubaDBType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapDBType.setStatus('current')
wlsxTrapVrrpID = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 42), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVrrpID.setStatus('current')
wlsxTrapVrrpMasterIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 43), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVrrpMasterIp.setStatus('current')
wlsxTrapVrrpOperState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 44), ArubaVrrpState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVrrpOperState.setStatus('current')
wlsxTrapESIServerGrpName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapESIServerGrpName.setStatus('current')
wlsxTrapESIServerName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapESIServerName.setStatus('current')
wlsxTrapESIServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 47), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapESIServerIpAddress.setStatus('current')
wlsxTrapLicenseDaysRemaining = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 48), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapLicenseDaysRemaining.setStatus('current')
wlsxTrapSwitchIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 49), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSwitchIp.setStatus('current')
wlsxTrapSwitchRole = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 50), ArubaSwitchRole()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSwitchRole.setStatus('current')
wlsxTrapUserIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 51), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUserIpAddress.setStatus('current')
wlsxTrapUserPhyAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 52), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUserPhyAddress.setStatus('current')
wlsxTrapUserName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUserName.setStatus('current')
wlsxTrapUserRole = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUserRole.setStatus('current')
wlsxTrapUserAuthenticationMethod = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 55), ArubaAuthenticationMethods()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUserAuthenticationMethod.setStatus('current')
wlsxTrapAPRadioNumber = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 56), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPRadioNumber.setStatus('current')
wlsxTrapRogueInfoURL = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapRogueInfoURL.setStatus('current')
wlsxTrapInterferingAPInfoURL = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapInterferingAPInfoURL.setStatus('current')
wlsxTrapPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 59), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapPortNumber.setStatus('current')
wlsxTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 60), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTime.setStatus('current')
wlsxTrapHostIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 61), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapHostIp.setStatus('current')
wlsxTrapHostPort = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 62), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapHostPort.setStatus('current')
wlsxTrapConfigurationId = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 63), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapConfigurationId.setStatus('current')
wlsxTrapCTSURL = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapCTSURL.setStatus('current')
wlsxTrapCTSTransferType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapCTSTransferType.setStatus('current')
wlsxTrapConfigurationState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 66), ArubaConfigurationState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapConfigurationState.setStatus('current')
wlsxTrapUpdateFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUpdateFailureReason.setStatus('current')
wlsxTrapUpdateFailedObj = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUpdateFailedObj.setStatus('current')
wlsxTrapTableEntryChangeType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 69), ArubaConfigurationChangeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTableEntryChangeType.setStatus('current')
wlsxTrapGlobalConfigObj = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapGlobalConfigObj.setStatus('current')
wlsxTrapTableGenNumber = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 71), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTableGenNumber.setStatus('current')
wlsxTrapLicenseId = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 72), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapLicenseId.setStatus('current')
wlsxTrapConfidenceLevel = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 73), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapConfidenceLevel.setStatus('current')
wlsxTrapMissingLicenses = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapMissingLicenses.setStatus('current')
wlsxVoiceCurrentNumCdr = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 75), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxVoiceCurrentNumCdr.setStatus('current')
wlsxTrapTunnelId = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 76), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTunnelId.setStatus('current')
wlsxTrapTunnelStatus = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 77), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTunnelStatus.setStatus('current')
wlsxTrapTunnelUpReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTunnelUpReason.setStatus('current')
wlsxTrapTunnelDownReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTunnelDownReason.setStatus('current')
wlsxTrapApSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapApSerialNumber.setStatus('current')
wlsxTrapTimeStr = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapTimeStr.setStatus('current')
wlsxTrapMasterIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 82), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapMasterIp.setStatus('current')
wlsxTrapLocalIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 83), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapLocalIp.setStatus('current')
wlsxTrapMasterName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 84), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapMasterName.setStatus('current')
wlsxTrapLocalName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapLocalName.setStatus('current')
wlsxTrapPrimaryControllerIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 86), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapPrimaryControllerIp.setStatus('current')
wlsxTrapBackupControllerIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 87), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapBackupControllerIp.setStatus('current')
wlsxTrapSpoofedFrameType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 88), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapSpoofedFrameType.setStatus('current')
wlsxTrapAssociationType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 89), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAssociationType.setStatus('current')
wlsxTrapDeviceIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 90), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapDeviceIpAddress.setStatus('current')
wlsxTrapDeviceMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 91), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapDeviceMac.setStatus('current')
wlsxTrapVcIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 92), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVcIpAddress.setStatus('current')
wlsxTrapVcMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 93), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapVcMacAddress.setStatus('current')
wlsxTrapAPName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 94), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPName.setStatus('current')
wlsxTrapApMode = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 95), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapApMode.setStatus('current')
wlsxTrapAPPrevChannel = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 96), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPPrevChannel.setStatus('current')
wlsxTrapAPPrevChannelSec = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 97), ArubaHTExtChannel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPPrevChannelSec.setStatus('current')
wlsxTrapAPPrevTxPower = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 98), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPPrevTxPower.setStatus('current')
wlsxTrapAPCurMode = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 99), ArubaAccessPointMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPCurMode.setStatus('current')
wlsxTrapAPPrevMode = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 100), ArubaAccessPointMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPPrevMode.setStatus('current')
wlsxTrapAPARMChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 101), ArubaARMChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPARMChangeReason.setStatus('current')
wlsxTrapAPChannelSec = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 102), ArubaHTExtChannel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPChannelSec.setStatus('current')
wlsxTrapUserAttributeChangeType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 103), ArubaConfigurationChangeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapUserAttributeChangeType.setStatus('current')
wlsxTrapApControllerIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 104), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapApControllerIp.setStatus('current')
wlsxTrapApMasterStatus = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 105), ArubaAPMasterStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapApMasterStatus.setStatus('current')
wlsxTrapCaName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 106), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapCaName.setStatus('current')
wlsxTrapCrlName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 107), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapCrlName.setStatus('current')
wlsxTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 108), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapCount.setStatus('current')
wlsxTrapAPPreviousUplinkType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 130), ArubaAPUplinkType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPPreviousUplinkType.setStatus('current')
wlsxTrapAPPreviousUplinkActiveTime = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 131), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPPreviousUplinkActiveTime.setStatus('current')
wlsxTrapAPActiveUplinkType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 132), ArubaAPUplinkType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPActiveUplinkType.setStatus('current')
wlsxTrapAPUplinkChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 133), ArubaAPUplinkChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPUplinkChangeReason.setStatus('current')
wlsxTrapAPManagedModeConfigFailure = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 138), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAPManagedModeConfigFailure.setStatus('current')
wlsxTrapAuthServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 139), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapAuthServerAddress.setStatus('current')
wlsxTrapPortalServerName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 140), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapPortalServerName.setStatus('current')
wlsxTrapPortalServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 141), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapPortalServerAddress.setStatus('current')
wlsxTrapPortalServerDownReason = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 1, 142), ArubaPortalServerDownReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wlsxTrapPortalServerDownReason.setStatus('current')
wlsxNodeRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1003)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxNodeRateAnomaly.setStatus('current')
wlsxNUserEntryCreated = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1014)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"))
if mibBuilder.loadTexts: wlsxNUserEntryCreated.setStatus('current')
wlsxNUserEntryDeleted = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1015)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"))
if mibBuilder.loadTexts: wlsxNUserEntryDeleted.setStatus('current')
wlsxNUserEntryAuthenticated = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1016)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"), ("AI-AP-MIB", "wlsxTrapUserName"), ("AI-AP-MIB", "wlsxTrapUserAuthenticationMethod"), ("AI-AP-MIB", "wlsxTrapUserRole"))
if mibBuilder.loadTexts: wlsxNUserEntryAuthenticated.setStatus('current')
wlsxNUserEntryDeAuthenticated = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1017)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"))
if mibBuilder.loadTexts: wlsxNUserEntryDeAuthenticated.setStatus('current')
wlsxNUserAuthenticationFailed = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1018)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserName"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerAddress"), ("AI-AP-MIB", "wlsxTrapAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPName"))
if mibBuilder.loadTexts: wlsxNUserAuthenticationFailed.setStatus('current')
wlsxNAuthServerReqTimedOut = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1019)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserName"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerAddress"), ("AI-AP-MIB", "wlsxTrapAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPName"))
if mibBuilder.loadTexts: wlsxNAuthServerReqTimedOut.setStatus('current')
wlsxNAuthServerTimedOut = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1020)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerTimeout"))
if mibBuilder.loadTexts: wlsxNAuthServerTimedOut.setStatus('current')
wlsxNAuthServerIsUp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1021)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerAddress"))
if mibBuilder.loadTexts: wlsxNAuthServerIsUp.setStatus('current')
wlsxNAccessPointIsUp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1040)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"))
if mibBuilder.loadTexts: wlsxNAccessPointIsUp.setStatus('current')
wlsxNAccessPointIsDown = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1041)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"))
if mibBuilder.loadTexts: wlsxNAccessPointIsDown.setStatus('current')
wlsxNChannelChanged = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1043)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNChannelChanged.setStatus('current')
wlsxNStationAddedToBlackList = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1044)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapStationBlackListReason"))
if mibBuilder.loadTexts: wlsxNStationAddedToBlackList.setStatus('current')
wlsxNStationRemovedFromBlackList = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1045)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"))
if mibBuilder.loadTexts: wlsxNStationRemovedFromBlackList.setStatus('current')
wlsxNRadioAttributesChanged = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1049)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPIpAddress"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapAPTxPower"))
if mibBuilder.loadTexts: wlsxNRadioAttributesChanged.setStatus('current')
wlsxUnsecureAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1053)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapMatchedMac"), ("AI-AP-MIB", "wlsxTrapMatchedIp"), ("AI-AP-MIB", "wlsxTrapRogueInfoURL"))
if mibBuilder.loadTexts: wlsxUnsecureAPDetected.setStatus('current')
wlsxUnsecureAPResolved = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1054)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxUnsecureAPResolved.setStatus('current')
wlsxStaImpersonation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1055)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxStaImpersonation.setStatus('current')
wlsxReservedChannelViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1056)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxReservedChannelViolation.setStatus('current')
wlsxValidSSIDViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1057)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxValidSSIDViolation.setStatus('current')
wlsxChannelMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1058)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelMisconfiguration.setStatus('current')
wlsxOUIMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1059)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxOUIMisconfiguration.setStatus('current')
wlsxSSIDMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1060)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxSSIDMisconfiguration.setStatus('current')
wlsxShortPreableMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1061)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxShortPreableMisconfiguration.setStatus('current')
wlsxWPAMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1062)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxWPAMisconfiguration.setStatus('current')
wlsxAdhocNetworkDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1063)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAdhocNetworkDetected.setStatus('current')
wlsxAdhocNetworkRemoved = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1064)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAdhocNetworkRemoved.setStatus('current')
wlsxStaPolicyViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1065)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxStaPolicyViolation.setStatus('current')
wlsxRepeatWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1066)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxRepeatWEPIVViolation.setStatus('current')
wlsxWeakWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1067)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxWeakWEPIVViolation.setStatus('current')
wlsxChannelInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1068)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelInterferenceDetected.setStatus('current')
wlsxChannelInterferenceCleared = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1069)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelInterferenceCleared.setStatus('current')
wlsxAPInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1070)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAPInterferenceDetected.setStatus('current')
wlsxAPInterferenceCleared = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1071)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAPInterferenceCleared.setStatus('current')
wlsxStaInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1072)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxStaInterferenceDetected.setStatus('current')
wlsxStaInterferenceCleared = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1073)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxStaInterferenceCleared.setStatus('current')
wlsxFrameRetryRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1074)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxFrameRetryRateExceeded.setStatus('current')
wlsxFrameReceiveErrorRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1075)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapTargetAPChannel"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxFrameReceiveErrorRateExceeded.setStatus('current')
wlsxFrameFragmentationRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1076)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapTargetAPChannel"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxFrameFragmentationRateExceeded.setStatus('current')
wlsxFrameBandWidthRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1077)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxFrameBandWidthRateExceeded.setStatus('current')
wlsxFrameLowSpeedRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1078)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxFrameLowSpeedRateExceeded.setStatus('current')
wlsxFrameNonUnicastRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1079)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxFrameNonUnicastRateExceeded.setStatus('current')
wlsxLoadbalancingEnabled = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1080)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxLoadbalancingEnabled.setStatus('current')
wlsxLoadbalancingDisabled = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1081)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxLoadbalancingDisabled.setStatus('current')
wlsxChannelFrameRetryRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1082)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelFrameRetryRateExceeded.setStatus('current')
wlsxChannelFrameFragmentationRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1083)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelFrameFragmentationRateExceeded.setStatus('current')
wlsxChannelFrameErrorRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1084)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelFrameErrorRateExceeded.setStatus('current')
wlsxSignatureMatchAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1085)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignatureMatchAP.setStatus('current')
wlsxSignatureMatchSta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1086)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignatureMatchSta.setStatus('current')
wlsxChannelRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1087)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxChannelRateAnomaly.setStatus('current')
wlsxNodeRateAnomalyAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1088)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxNodeRateAnomalyAP.setStatus('current')
wlsxNodeRateAnomalySta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1089)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxNodeRateAnomalySta.setStatus('current')
wlsxEAPRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1090)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxEAPRateAnomaly.setStatus('current')
wlsxSignalAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1091)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxSignalAnomaly.setStatus('current')
wlsxSequenceNumberAnomalyAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1092)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSequenceNumberAnomalyAP.setStatus('current')
wlsxSequenceNumberAnomalySta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1093)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSequenceNumberAnomalySta.setStatus('current')
wlsxDisconnectStationAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1094)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxDisconnectStationAttack.setStatus('current')
wlsxApFloodAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1095)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxApFloodAttack.setStatus('current')
wlsxAdhocNetwork = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1096)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxAdhocNetwork.setStatus('current')
wlsxWirelessBridge = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1097)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxWirelessBridge.setStatus('current')
wlsxInvalidMacOUIAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1098)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAddressType"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxInvalidMacOUIAP.setStatus('current')
wlsxInvalidMacOUISta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1099)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAddressType"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxInvalidMacOUISta.setStatus('current')
wlsxWEPMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1100)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxWEPMisconfiguration.setStatus('current')
wlsxStaRepeatWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1101)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxStaRepeatWEPIVViolation.setStatus('current')
wlsxStaWeakWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1102)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxStaWeakWEPIVViolation.setStatus('current')
wlsxStaAssociatedToUnsecureAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1103)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapRogueInfoURL"))
if mibBuilder.loadTexts: wlsxStaAssociatedToUnsecureAP.setStatus('current')
wlsxStaUnAssociatedFromUnsecureAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1104)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapNodeMac"))
if mibBuilder.loadTexts: wlsxStaUnAssociatedFromUnsecureAP.setStatus('current')
wlsxAdhocNetworkBridgeDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1105)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAdhocNetworkBridgeDetected.setStatus('current')
wlsxInterferingApDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1106)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapInterferingAPInfoURL"))
if mibBuilder.loadTexts: wlsxInterferingApDetected.setStatus('current')
wlsxColdStart = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1111)).setObjects(("AI-AP-MIB", "wlsxTrapTime"))
if mibBuilder.loadTexts: wlsxColdStart.setStatus('current')
wlsxWarmStart = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1112)).setObjects(("AI-AP-MIB", "wlsxTrapTime"))
if mibBuilder.loadTexts: wlsxWarmStart.setStatus('current')
wlsxAPImpersonation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1113)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAPImpersonation.setStatus('current')
wlsxNAuthServerIsDown = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1115)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerAddress"))
if mibBuilder.loadTexts: wlsxNAuthServerIsDown.setStatus('current')
wlsxWindowsBridgeDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1129)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxWindowsBridgeDetected.setStatus('current')
wlsxSignAPNetstumbler = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1134)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignAPNetstumbler.setStatus('current')
wlsxSignStaNetstumbler = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1135)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignStaNetstumbler.setStatus('current')
wlsxSignAPAsleap = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1136)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignAPAsleap.setStatus('current')
wlsxSignStaAsleap = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1137)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignStaAsleap.setStatus('current')
wlsxSignAPAirjack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1138)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignAPAirjack.setStatus('current')
wlsxSignStaAirjack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1139)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignStaAirjack.setStatus('current')
wlsxSignAPNullProbeResp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1140)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignAPNullProbeResp.setStatus('current')
wlsxSignStaNullProbeResp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1141)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignStaNullProbeResp.setStatus('current')
wlsxSignAPDeauthBcast = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1142)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignAPDeauthBcast.setStatus('current')
wlsxSignStaDeauthBcast = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1143)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxSignStaDeauthBcast.setStatus('current')
wlsxWindowsBridgeDetectedAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1144)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxWindowsBridgeDetectedAP.setStatus('current')
wlsxWindowsBridgeDetectedSta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1145)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxWindowsBridgeDetectedSta.setStatus('current')
wlsxAdhocNetworkBridgeDetectedAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1146)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAdhocNetworkBridgeDetectedAP.setStatus('current')
wlsxAdhocNetworkBridgeDetectedSta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1147)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAdhocNetworkBridgeDetectedSta.setStatus('current')
wlsxDisconnectStationAttackAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1148)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxDisconnectStationAttackAP.setStatus('current')
wlsxDisconnectStationAttackSta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1149)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxDisconnectStationAttackSta.setStatus('current')
wlsxSuspectUnsecureAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1150)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapMatchedMac"), ("AI-AP-MIB", "wlsxTrapMatchedIp"), ("AI-AP-MIB", "wlsxTrapConfidenceLevel"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapRogueInfoURL"))
if mibBuilder.loadTexts: wlsxSuspectUnsecureAPDetected.setStatus('current')
wlsxSuspectUnsecureAPResolved = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1151)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"))
if mibBuilder.loadTexts: wlsxSuspectUnsecureAPResolved.setStatus('current')
wlsxHtGreenfieldSupported = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1157)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxHtGreenfieldSupported.setStatus('current')
wlsxHT40MHzIntoleranceAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1158)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxHT40MHzIntoleranceAP.setStatus('current')
wlsxHT40MHzIntoleranceSta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1159)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapFrameType"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxHT40MHzIntoleranceSta.setStatus('current')
wlsxNAuthServerAllInService = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1160)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapESIServerGrpName"))
if mibBuilder.loadTexts: wlsxNAuthServerAllInService.setStatus('current')
wlsxNAdhocNetwork = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1161)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNAdhocNetwork.setStatus('current')
wlsxNAdhocNetworkBridgeDetectedAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1162)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNAdhocNetworkBridgeDetectedAP.setStatus('current')
wlsxNAdhocNetworkBridgeDetectedSta = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1163)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNAdhocNetworkBridgeDetectedSta.setStatus('current')
wlsxClientFloodAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1170)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxClientFloodAttack.setStatus('current')
wlsxValidClientNotUsingEncryption = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1171)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxValidClientNotUsingEncryption.setStatus('current')
wlsxAdhocUsingValidSSID = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1172)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAdhocUsingValidSSID.setStatus('current')
wlsxAPSpoofingDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1173)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSpoofedFrameType"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxAPSpoofingDetected.setStatus('current')
wlsxClientAssociatingOnWrongChannel = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1174)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSpoofedFrameType"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxClientAssociatingOnWrongChannel.setStatus('current')
wlsxNDisconnectStationAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1175)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNDisconnectStationAttack.setStatus('current')
wlsxNStaUnAssociatedFromUnsecureAP = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1176)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNStaUnAssociatedFromUnsecureAP.setStatus('current')
wlsxOmertaAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1177)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxOmertaAttack.setStatus('current')
wlsxTKIPReplayAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1178)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxTKIPReplayAttack.setStatus('current')
wlsxChopChopAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1179)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxChopChopAttack.setStatus('current')
wlsxFataJackAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1180)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxFataJackAttack.setStatus('current')
wlsxInvalidAddressCombination = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1181)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxInvalidAddressCombination.setStatus('current')
wlsxValidClientMisassociation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1182)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAssociationType"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxValidClientMisassociation.setStatus('current')
wlsxMalformedHTIEDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1183)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxMalformedHTIEDetected.setStatus('current')
wlsxMalformedAssocReqDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1184)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxMalformedAssocReqDetected.setStatus('current')
wlsxOverflowIEDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1185)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxOverflowIEDetected.setStatus('current')
wlsxOverflowEAPOLKeyDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1186)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxOverflowEAPOLKeyDetected.setStatus('current')
wlsxMalformedFrameLargeDurationDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1187)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxMalformedFrameLargeDurationDetected.setStatus('current')
wlsxMalformedFrameWrongChannelDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1188)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPChannel"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxMalformedFrameWrongChannelDetected.setStatus('current')
wlsxMalformedAuthFrame = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1189)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxMalformedAuthFrame.setStatus('current')
wlsxCTSRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1190)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxCTSRateAnomaly.setStatus('current')
wlsxRTSRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1191)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxRTSRateAnomaly.setStatus('current')
wlsxNRogueAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1192)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNRogueAPDetected.setStatus('current')
wlsxNRogueAPResolved = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1193)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNRogueAPResolved.setStatus('current')
wlsxNeighborAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1194)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNeighborAPDetected.setStatus('current')
wlsxNInterferingAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1195)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNInterferingAPDetected.setStatus('current')
wlsxNSuspectRogueAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1196)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapConfidenceLevel"))
if mibBuilder.loadTexts: wlsxNSuspectRogueAPDetected.setStatus('current')
wlsxNSuspectRogueAPResolved = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1197)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSuspectRogueAPResolved.setStatus('current')
wlsxBlockAckAttackDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1198)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"))
if mibBuilder.loadTexts: wlsxBlockAckAttackDetected.setStatus('current')
wlsxHotspotterAttackDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1199)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"))
if mibBuilder.loadTexts: wlsxHotspotterAttackDetected.setStatus('current')
wlsxNSignatureMatch = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1200)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatch.setStatus('current')
wlsxNSignatureMatchNetstumbler = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1201)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchNetstumbler.setStatus('current')
wlsxNSignatureMatchAsleap = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1202)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchAsleap.setStatus('current')
wlsxNSignatureMatchAirjack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1203)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchAirjack.setStatus('current')
wlsxNSignatureMatchNullProbeResp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1204)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchNullProbeResp.setStatus('current')
wlsxNSignatureMatchDeauthBcast = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1205)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchDeauthBcast.setStatus('current')
wlsxNSignatureMatchDisassocBcast = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1206)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchDisassocBcast.setStatus('current')
wlsxNSignatureMatchWellenreiter = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1207)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTransmitterMac"), ("AI-AP-MIB", "wlsxTrapReceiverMac"), ("AI-AP-MIB", "wlsxTrapSignatureName"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNSignatureMatchWellenreiter.setStatus('current')
wlsxAPDeauthContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1208)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxAPDeauthContainment.setStatus('current')
wlsxClientDeauthContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1209)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxClientDeauthContainment.setStatus('current')
wlsxAPWiredContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1210)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapDeviceIpAddress"), ("AI-AP-MIB", "wlsxTrapDeviceMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxAPWiredContainment.setStatus('current')
wlsxClientWiredContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1211)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapDeviceIpAddress"), ("AI-AP-MIB", "wlsxTrapDeviceMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxClientWiredContainment.setStatus('current')
wlsxAPTaggedWiredContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1212)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapDeviceIpAddress"), ("AI-AP-MIB", "wlsxTrapDeviceMac"), ("AI-AP-MIB", "wlsxTrapVlanId"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxAPTaggedWiredContainment.setStatus('current')
wlsxClientTaggedWiredContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1213)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapDeviceIpAddress"), ("AI-AP-MIB", "wlsxTrapDeviceMac"), ("AI-AP-MIB", "wlsxTrapVlanId"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxClientTaggedWiredContainment.setStatus('current')
wlsxTarpitContainment = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1214)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapTargetAPChannel"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxTarpitContainment.setStatus('current')
wlsxAPChannelChange = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1216)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPChannel"), ("AI-AP-MIB", "wlsxTrapAPChannelSec"), ("AI-AP-MIB", "wlsxTrapAPPrevChannel"), ("AI-AP-MIB", "wlsxTrapAPPrevChannelSec"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPARMChangeReason"))
if mibBuilder.loadTexts: wlsxAPChannelChange.setStatus('current')
wlsxAPPowerChange = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1217)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPTxPower"), ("AI-AP-MIB", "wlsxTrapAPPrevTxPower"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxAPPowerChange.setStatus('current')
wlsxAPModeChange = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1218)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPCurMode"), ("AI-AP-MIB", "wlsxTrapAPPrevMode"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"))
if mibBuilder.loadTexts: wlsxAPModeChange.setStatus('current')
wlsxUserEntryAttributesChanged = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1219)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"), ("AI-AP-MIB", "wlsxTrapAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPName"), ("AI-AP-MIB", "wlsxTrapCardSlot"), ("AI-AP-MIB", "wlsxTrapPortNumber"), ("AI-AP-MIB", "wlsxTrapUserAttributeChangeType"))
if mibBuilder.loadTexts: wlsxUserEntryAttributesChanged.setStatus('current')
wlsxPowerSaveDosAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1220)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapNodeMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxPowerSaveDosAttack.setStatus('current')
wlsxNAPMasterStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1221)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapApControllerIp"), ("AI-AP-MIB", "wlsxTrapApMasterStatus"))
if mibBuilder.loadTexts: wlsxNAPMasterStatusChange.setStatus('current')
wlsxNAdhocUsingValidSSID = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1222)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapTargetAPBSSID"), ("AI-AP-MIB", "wlsxTrapTargetAPSSID"), ("AI-AP-MIB", "wlsxTrapSourceMac"), ("AI-AP-MIB", "wlsxTrapSnr"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPRadioNumber"), ("AI-AP-MIB", "wlsxTrapAPLocation"), ("AI-AP-MIB", "wlsxTrapAPChannel"))
if mibBuilder.loadTexts: wlsxNAdhocUsingValidSSID.setStatus('current')
wlsxMgmtUserAuthenticationFailed = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1224)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserName"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerAddress"))
if mibBuilder.loadTexts: wlsxMgmtUserAuthenticationFailed.setStatus('current')
wlsxAPActiveUplinkChanged = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1252)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPPreviousUplinkType"), ("AI-AP-MIB", "wlsxTrapAPPreviousUplinkActiveTime"), ("AI-AP-MIB", "wlsxTrapAPActiveUplinkType"), ("AI-AP-MIB", "wlsxTrapAPUplinkChangeReason"))
if mibBuilder.loadTexts: wlsxAPActiveUplinkChanged.setStatus('current')
wlsxAPManagedModeConfigFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1255)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapAPManagedModeConfigFailure"))
if mibBuilder.loadTexts: wlsxAPManagedModeConfigFailureTrap.setStatus('current')
wlsxNAuthServerAcctTimedOut = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1256)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapUserName"), ("AI-AP-MIB", "wlsxTrapUserIpAddress"), ("AI-AP-MIB", "wlsxTrapUserPhyAddress"), ("AI-AP-MIB", "wlsxTrapAuthServerName"), ("AI-AP-MIB", "wlsxTrapAuthServerAddress"), ("AI-AP-MIB", "wlsxTrapAPBSSID"), ("AI-AP-MIB", "wlsxTrapAPName"))
if mibBuilder.loadTexts: wlsxNAuthServerAcctTimedOut.setStatus('current')
wlsxPortalServerDown = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1259)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapPortalServerName"), ("AI-AP-MIB", "wlsxTrapPortalServerAddress"), ("AI-AP-MIB", "wlsxTrapAPName"), ("AI-AP-MIB", "wlsxTrapPortalServerDownReason"))
if mibBuilder.loadTexts: wlsxPortalServerDown.setStatus('current')
wlsxPortalServerUp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1260)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapPortalServerName"), ("AI-AP-MIB", "wlsxTrapPortalServerAddress"), ("AI-AP-MIB", "wlsxTrapAPName"))
if mibBuilder.loadTexts: wlsxPortalServerUp.setStatus('current')
wlsxIAPVoiceClientLocationUpdate = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 3, 1, 200, 2, 1262)).setObjects(("AI-AP-MIB", "wlsxTrapTime"), ("AI-AP-MIB", "wlsxTrapVcIpAddress"), ("AI-AP-MIB", "wlsxTrapVcMacAddress"), ("AI-AP-MIB", "wlsxTrapAPMacAddress"), ("AI-AP-MIB", "wlsxTrapAPName"))
if mibBuilder.loadTexts: wlsxIAPVoiceClientLocationUpdate.setStatus('current')
mibBuilder.exportSymbols("AI-AP-MIB", wlsxTrapUserPhyAddress=wlsxTrapUserPhyAddress, wlsxTarpitContainment=wlsxTarpitContainment, ArubaAPUplinkType=ArubaAPUplinkType, wlsxTrapSignatureName=wlsxTrapSignatureName, wlsxTrapApMasterStatus=wlsxTrapApMasterStatus, wlsxMalformedHTIEDetected=wlsxMalformedHTIEDetected, wlsxRepeatWEPIVViolation=wlsxRepeatWEPIVViolation, ArubaHTMode=ArubaHTMode, aiManagedInfoGroup=aiManagedInfoGroup, wlsxNAdhocNetworkBridgeDetectedSta=wlsxNAdhocNetworkBridgeDetectedSta, ArubaEncryptionMethods=ArubaEncryptionMethods, wlsxNodeRateAnomaly=wlsxNodeRateAnomaly, ArubaStationType=ArubaStationType, wlsxAPDeauthContainment=wlsxAPDeauthContainment, aiWlanIndex=aiWlanIndex, ArubaUserForwardMode=ArubaUserForwardMode, wlsxValidClientNotUsingEncryption=wlsxValidClientNotUsingEncryption, wlsxSignAPNetstumbler=wlsxSignAPNetstumbler, wlsxNAuthServerIsUp=wlsxNAuthServerIsUp, wlsxVoiceCurrentNumCdr=wlsxVoiceCurrentNumCdr, aiVirtualControllerIPAddress=aiVirtualControllerIPAddress, aiRadioPhyEvents=aiRadioPhyEvents, wlsxNSuspectRogueAPDetected=wlsxNSuspectRogueAPDetected, ArubaUSBStatus=ArubaUSBStatus, aiClientAPMac=aiClientAPMac, wlsxTrapAPPreviousUplinkActiveTime=wlsxTrapAPPreviousUplinkActiveTime, aiClientMac=aiClientMac, wlsxTrapHostIp=wlsxTrapHostIp, wlsxNUserEntryCreated=wlsxNUserEntryCreated, wlsxTrapAPMacAddress=wlsxTrapAPMacAddress, wlsxTrapSourceMac=wlsxTrapSourceMac, wlsxClientAssociatingOnWrongChannel=wlsxClientAssociatingOnWrongChannel, wlsxTrapAPCurMode=wlsxTrapAPCurMode, wlsxTrapGlobalConfigObj=wlsxTrapGlobalConfigObj, aiRadioTxDataFrames=aiRadioTxDataFrames, wlsxTrapCount=wlsxTrapCount, wlsxNSignatureMatchNetstumbler=wlsxNSignatureMatchNetstumbler, wlsxAdhocNetworkBridgeDetected=wlsxAdhocNetworkBridgeDetected, wlsxAPPowerChange=wlsxAPPowerChange, wlsxTrapVcIpAddress=wlsxTrapVcIpAddress, ArubaVoiceCacBit=ArubaVoiceCacBit, wlsxTrapTunnelId=wlsxTrapTunnelId, wlsxFrameReceiveErrorRateExceeded=wlsxFrameReceiveErrorRateExceeded, wlsxNAuthServerReqTimedOut=wlsxNAuthServerReqTimedOut, aiRadioNoiseFloor=aiRadioNoiseFloor, wlsxAPModeChange=wlsxAPModeChange, wlsxBlockAckAttackDetected=wlsxBlockAckAttackDetected, wlsxTrapAPARMChangeReason=wlsxTrapAPARMChangeReason, aiRadioTxDataBytes=aiRadioTxDataBytes, ArubaFrameType=ArubaFrameType, wlsxTrapUserIpAddress=wlsxTrapUserIpAddress, ArubaActiveState=ArubaActiveState, wlsxTrapDeviceIpAddress=wlsxTrapDeviceIpAddress, aiSSID=aiSSID, aiAPModelName=aiAPModelName, wlsxChannelFrameErrorRateExceeded=wlsxChannelFrameErrorRateExceeded, wlsxChannelFrameFragmentationRateExceeded=wlsxChannelFrameFragmentationRateExceeded, wlsxStaInterferenceCleared=wlsxStaInterferenceCleared, ArubaVoipProtocolType=ArubaVoipProtocolType, wlsxTrapAPRadioNumber=wlsxTrapAPRadioNumber, aiRadioAPMACAddress=aiRadioAPMACAddress, wlsxChannelInterferenceDetected=wlsxChannelInterferenceDetected, wlsxMalformedFrameLargeDurationDetected=wlsxMalformedFrameLargeDurationDetected, wlsxTrapLicenseDaysRemaining=wlsxTrapLicenseDaysRemaining, wlsxSignalAnomaly=wlsxSignalAnomaly, wlsxTrapInterferingAPInfoURL=wlsxTrapInterferingAPInfoURL, wlsxTrapDBName=wlsxTrapDBName, wlsxStaWeakWEPIVViolation=wlsxStaWeakWEPIVViolation, aiClientWlanMACAddress=aiClientWlanMACAddress, wlsxUnsecureAPResolved=wlsxUnsecureAPResolved, wlsxTrapConfigurationState=wlsxTrapConfigurationState, wlsxTrapTargetAPBSSID=wlsxTrapTargetAPBSSID, aiClientAPName=aiClientAPName, aiClientTxDataBytes=aiClientTxDataBytes, wlsxTrapSpoofedFrameType=wlsxTrapSpoofedFrameType, wlsxNodeRateAnomalyAP=wlsxNodeRateAnomalyAP, aiClientRxRetries=aiClientRxRetries, wlsxTrapAuthServerAddress=wlsxTrapAuthServerAddress, wlsxNAdhocNetworkBridgeDetectedAP=wlsxNAdhocNetworkBridgeDetectedAP, wlsxNAccessPointIsDown=wlsxNAccessPointIsDown, wlsxNRadioAttributesChanged=wlsxNRadioAttributesChanged, ArubaPortType=ArubaPortType, wlsxNSignatureMatch=wlsxNSignatureMatch, wlsxFrameRetryRateExceeded=wlsxFrameRetryRateExceeded, wlsxSequenceNumberAnomalyAP=wlsxSequenceNumberAnomalyAP, wlsxChannelFrameRetryRateExceeded=wlsxChannelFrameRetryRateExceeded, aiVirtualControllerName=aiVirtualControllerName, wlsxTrapESIServerGrpName=wlsxTrapESIServerGrpName, ArubaACLNetworkServiceType=ArubaACLNetworkServiceType, aiMasterIPAddress=aiMasterIPAddress, wlsxTrapTableEntryChangeType=wlsxTrapTableEntryChangeType, aiRadioChannel=aiRadioChannel, wlsxTrapCTSTransferType=wlsxTrapCTSTransferType, wlsxNSignatureMatchDisassocBcast=wlsxNSignatureMatchDisassocBcast, aiClientRxRate=aiClientRxRate, ArubaVoiceCdrDirection=ArubaVoiceCdrDirection, ArubaVoipRegState=ArubaVoipRegState, aiAccessPointEntry=aiAccessPointEntry, aiClientTable=aiClientTable, aiVoiceClientTable=aiVoiceClientTable, ArubaHTExtChannel=ArubaHTExtChannel, ArubaConfigurationChangeType=ArubaConfigurationChangeType, aiClientRxDataBytes=aiClientRxDataBytes, wlsxTrapAPPrevMode=wlsxTrapAPPrevMode, wlsxUnsecureAPDetected=wlsxUnsecureAPDetected, aiWlanTxDataFrames=aiWlanTxDataFrames, wlsxTrapCardSlot=wlsxTrapCardSlot, ArubaBlackListReason=ArubaBlackListReason, wlsxNAPMasterStatusChange=wlsxNAPMasterStatusChange, wlsxPortalServerDown=wlsxPortalServerDown, ArubaHTRate=ArubaHTRate, wlsxTrapAssociationType=wlsxTrapAssociationType, wlsxTrapMissingLicenses=wlsxTrapMissingLicenses, aiInfoGroup=aiInfoGroup, wlsxNAdhocUsingValidSSID=wlsxNAdhocUsingValidSSID, wlsxTrapSnr=wlsxTrapSnr, PYSNMP_MODULE_ID=aiMIB, wlsxTrapPortalServerName=wlsxTrapPortalServerName, wlsxSignAPAsleap=wlsxSignAPAsleap, aiWlanRxDataBytes=aiWlanRxDataBytes, ArubaCardType=ArubaCardType, wlsxSignatureMatchAP=wlsxSignatureMatchAP, ArubaMonEncryptionType=ArubaMonEncryptionType, ArubaMonAuthAlgorithm=ArubaMonAuthAlgorithm, wlsxTrapPrimaryControllerIp=wlsxTrapPrimaryControllerIp, ArubaIfType=ArubaIfType, aiClientName=aiClientName, aiVoiceClientEntry=aiVoiceClientEntry, aiRadioRxDataFrames=aiRadioRxDataFrames, wlsxTrapVoltageType=wlsxTrapVoltageType, wlsxStaRepeatWEPIVViolation=wlsxStaRepeatWEPIVViolation, wlsxStaUnAssociatedFromUnsecureAP=wlsxStaUnAssociatedFromUnsecureAP, wlsxInvalidMacOUISta=wlsxInvalidMacOUISta, aiAPIPAddress=aiAPIPAddress, wlsxColdStart=wlsxColdStart, wlsxSignStaAirjack=wlsxSignStaAirjack, wlsxSuspectUnsecureAPResolved=wlsxSuspectUnsecureAPResolved, wlsxStaPolicyViolation=wlsxStaPolicyViolation, ArubaARMChangeReason=ArubaARMChangeReason, ArubaEnet1Mode=ArubaEnet1Mode, aiRadioTable=aiRadioTable, wlsxTrapPortNumber=wlsxTrapPortNumber, ArubaSubAuthenticationMethods=ArubaSubAuthenticationMethods, wlsxTrapUserRole=wlsxTrapUserRole, wlsxTrapConfigurationId=wlsxTrapConfigurationId, aiTrapDefinitionsGroup=aiTrapDefinitionsGroup, wlsxNAuthServerIsDown=wlsxNAuthServerIsDown, aiVirtualControllerOrganization=aiVirtualControllerOrganization, wlsxSignAPDeauthBcast=wlsxSignAPDeauthBcast, wlsxWindowsBridgeDetectedSta=wlsxWindowsBridgeDetectedSta, wlsxTrapFrameType=wlsxTrapFrameType, aiClientTxRetries=aiClientTxRetries, wlsxNSignatureMatchAirjack=wlsxNSignatureMatchAirjack, wlsxTrapReceiverMac=wlsxTrapReceiverMac, wlsxFataJackAttack=wlsxFataJackAttack, wlsxTrapAPUplinkChangeReason=wlsxTrapAPUplinkChangeReason, aiWlanEntry=aiWlanEntry, aiClientUptime=aiClientUptime, wlsxNRogueAPResolved=wlsxNRogueAPResolved, wlsxTrapConfidenceLevel=wlsxTrapConfidenceLevel, aiWlanAPMACAddress=aiWlanAPMACAddress, wlsxSignStaNullProbeResp=wlsxSignStaNullProbeResp, wlsxAPActiveUplinkChanged=wlsxAPActiveUplinkChanged, wlsxTrapApControllerIp=wlsxTrapApControllerIp, aiRadioIndex=aiRadioIndex, wlsxClientDeauthContainment=wlsxClientDeauthContainment, wlsxTrapSpoofedNewPhyAddress=wlsxTrapSpoofedNewPhyAddress, wlsxSSIDMisconfiguration=wlsxSSIDMisconfiguration, wlsxOverflowIEDetected=wlsxOverflowIEDetected, wlsxPortalServerUp=wlsxPortalServerUp, aiClientMACAddress=aiClientMACAddress, wlsxTrapAddressType=wlsxTrapAddressType, wlsxTrapTemperatureValue=wlsxTrapTemperatureValue, aiRadioTransmitPower=aiRadioTransmitPower, wlsxNAuthServerAllInService=wlsxNAuthServerAllInService, wlsxLoadbalancingEnabled=wlsxLoadbalancingEnabled, ArubaACLAction=ArubaACLAction, wlsxIAPVoiceClientLocationUpdate=wlsxIAPVoiceClientLocationUpdate, ArubaESIServerStatus=ArubaESIServerStatus, wlsxTrapVrrpMasterIp=wlsxTrapVrrpMasterIp, wlsxAPSpoofingDetected=wlsxAPSpoofingDetected, aiMIB=aiMIB, wlsxClientWiredContainment=wlsxClientWiredContainment, aiWlanTxTotalFrames=aiWlanTxTotalFrames, wlsxTrapNodeMac=wlsxTrapNodeMac, aiVirtualControllerKey=aiVirtualControllerKey, wlsxTrapRogueInfoURL=wlsxTrapRogueInfoURL, wlsxNChannelChanged=wlsxNChannelChanged, ArubaAccessPointMode=ArubaAccessPointMode, ArubaPortDuplex=ArubaPortDuplex, ArubaConfigurationState=ArubaConfigurationState, wlsxAdhocNetworkBridgeDetectedAP=wlsxAdhocNetworkBridgeDetectedAP, wlsxNInterferingAPDetected=wlsxNInterferingAPDetected, aiRadioStatus=aiRadioStatus, wlsxTrapTargetAPChannel=wlsxTrapTargetAPChannel, wlsxNStaUnAssociatedFromUnsecureAP=wlsxNStaUnAssociatedFromUnsecureAP, aiAPUptime=aiAPUptime, wlsxNSignatureMatchDeauthBcast=wlsxNSignatureMatchDeauthBcast, wlsxTrapProcessName=wlsxTrapProcessName, wlsxAdhocUsingValidSSID=wlsxAdhocUsingValidSSID, ArubaPortSpeed=ArubaPortSpeed, aiWlanRxTotalFrames=aiWlanRxTotalFrames, wlsxTrapDeviceMac=wlsxTrapDeviceMac, wlsxTrapApMode=wlsxTrapApMode, wlsxNStationAddedToBlackList=wlsxNStationAddedToBlackList, aiWlanRxDataFrames=aiWlanRxDataFrames, wlsxHT40MHzIntoleranceSta=wlsxHT40MHzIntoleranceSta, ArubaAPMatchType=ArubaAPMatchType, wlsxTKIPReplayAttack=wlsxTKIPReplayAttack, aiWlanSSIDTable=aiWlanSSIDTable, wlsxChannelMisconfiguration=wlsxChannelMisconfiguration, wlsxReceiverMac=wlsxReceiverMac, wlsxNSignatureMatchNullProbeResp=wlsxNSignatureMatchNullProbeResp, aiSSIDIndex=aiSSIDIndex, aiAccessPointTable=aiAccessPointTable, aiRadioRxMgmtFrames=aiRadioRxMgmtFrames, ArubaAuthenticationMethods=ArubaAuthenticationMethods, wlsxStaAssociatedToUnsecureAP=wlsxStaAssociatedToUnsecureAP, wlsxWirelessBridge=wlsxWirelessBridge, wlsxTrapLicenseId=wlsxTrapLicenseId, wlsxTrapSpoofedIpAddress=wlsxTrapSpoofedIpAddress, wlsxInterferingApDetected=wlsxInterferingApDetected, wlsxTrapAPPreviousUplinkType=wlsxTrapAPPreviousUplinkType, ArubaAPMatchMethod=ArubaAPMatchMethod, aiRadioTxDrops=aiRadioTxDrops, wlsxTrapAPChannel=wlsxTrapAPChannel, wlsxTrapSwitchIp=wlsxTrapSwitchIp, ArubaVoipProtocol=ArubaVoipProtocol, wlsxNUserEntryAuthenticated=wlsxNUserEntryAuthenticated, aiWlanMACAddress=aiWlanMACAddress, aiRadioTxMgmtFrames=aiRadioTxMgmtFrames, wlsxSignAPAirjack=wlsxSignAPAirjack, wlsxSignStaNetstumbler=wlsxSignStaNetstumbler, wlsxInvalidAddressCombination=wlsxInvalidAddressCombination, aiRadioMACAddress=aiRadioMACAddress, wlsxNDisconnectStationAttack=wlsxNDisconnectStationAttack, ArubaSwitchRole=ArubaSwitchRole, aiStateGroup=aiStateGroup, aiRadioRxDataBytes=aiRadioRxDataBytes, wlsxTrapVcMacAddress=wlsxTrapVcMacAddress, wlsxTrapTime=wlsxTrapTime, ArubaAPMasterStatus=ArubaAPMasterStatus, wlsxTrapMasterIp=wlsxTrapMasterIp, aiRadioRxTotalFrames=aiRadioRxTotalFrames, aiRadioTxTotalFrames=aiRadioTxTotalFrames, wlsxAPInterferenceCleared=wlsxAPInterferenceCleared, wlsxWindowsBridgeDetectedAP=wlsxWindowsBridgeDetectedAP, wlsxApFloodAttack=wlsxApFloodAttack, wlsxTrapAuthServerName=wlsxTrapAuthServerName, wlsxTrapFanNumber=wlsxTrapFanNumber, ArubaMonitorMode=ArubaMonitorMode, wlsxTrapBackupControllerIp=wlsxTrapBackupControllerIp, wlsxNUserEntryDeleted=wlsxNUserEntryDeleted, ArubaMeshRole=ArubaMeshRole)
mibBuilder.exportSymbols("AI-AP-MIB", wlsxTrapEssid=wlsxTrapEssid, wlsxTrapAuthServerTimeout=wlsxTrapAuthServerTimeout, wlsxMalformedAuthFrame=wlsxMalformedAuthFrame, aiWlanTable=aiWlanTable, aiClientIPAddress=aiClientIPAddress, wlsxFrameBandWidthRateExceeded=wlsxFrameBandWidthRateExceeded, wlsxAPManagedModeConfigFailureTrap=wlsxAPManagedModeConfigFailureTrap, wlsxOmertaAttack=wlsxOmertaAttack, wlsxAPTaggedWiredContainment=wlsxAPTaggedWiredContainment, wlsxNSuspectRogueAPResolved=wlsxNSuspectRogueAPResolved, ArubaESIServerMode=ArubaESIServerMode, wlsxHotspotterAttackDetected=wlsxHotspotterAttackDetected, wlsxAdhocNetworkRemoved=wlsxAdhocNetworkRemoved, wlsxClientFloodAttack=wlsxClientFloodAttack, aiRadioRxBad=aiRadioRxBad, aiTrapsGroup=aiTrapsGroup, ArubaAPStatus=ArubaAPStatus, wlsxOUIMisconfiguration=wlsxOUIMisconfiguration, wlsxTrapVrrpID=wlsxTrapVrrpID, ArubaVrrpState=ArubaVrrpState, aiAPTotalMemory=aiAPTotalMemory, wlsxNeighborAPDetected=wlsxNeighborAPDetected, wlsxTrapESIServerName=wlsxTrapESIServerName, wlsxNUserAuthenticationFailed=wlsxNUserAuthenticationFailed, wlsxTrapAPActiveUplinkType=wlsxTrapAPActiveUplinkType, wlsxTrapAPChannelSec=wlsxTrapAPChannelSec, ArubaPortalServerDownReason=ArubaPortalServerDownReason, wlsxTrapAPPrevChannel=wlsxTrapAPPrevChannel, wlsxFrameFragmentationRateExceeded=wlsxFrameFragmentationRateExceeded, aiManagedModeSinceLastSync=aiManagedModeSinceLastSync, wlsxDisconnectStationAttackSta=wlsxDisconnectStationAttackSta, wlsxTrapLocalIp=wlsxTrapLocalIp, wlsxTrapTimeStr=wlsxTrapTimeStr, wlsxChopChopAttack=wlsxChopChopAttack, wlsxTrapTransmitterMac=wlsxTrapTransmitterMac, wlsxTrapMatchedMac=wlsxTrapMatchedMac, wlsxSequenceNumberAnomalySta=wlsxSequenceNumberAnomalySta, wlsxOverflowEAPOLKeyDetected=wlsxOverflowEAPOLKeyDetected, aiAPStatus=aiAPStatus, wlsxTrapAPIpAddress=wlsxTrapAPIpAddress, wlsxTrapAPPrevTxPower=wlsxTrapAPPrevTxPower, wlsxLoadbalancingDisabled=wlsxLoadbalancingDisabled, wlsxMgmtUserAuthenticationFailed=wlsxMgmtUserAuthenticationFailed, aiClientOperatingSystem=aiClientOperatingSystem, wlsxTrapVlanId=wlsxTrapVlanId, aiClientAPIPAddress=aiClientAPIPAddress, wlsxTrapCrlName=wlsxTrapCrlName, wlsxNRogueAPDetected=wlsxNRogueAPDetected, wlsxTrapUpdateFailureReason=wlsxTrapUpdateFailureReason, ArubaDaysOfWeek=ArubaDaysOfWeek, wlsxAPImpersonation=wlsxAPImpersonation, ArubaPhyType=ArubaPhyType, wlsxTrapUserAuthenticationMethod=wlsxTrapUserAuthenticationMethod, wlsxTrapAPPrevChannelSec=wlsxTrapAPPrevChannelSec, wlsxInvalidMacOUIAP=wlsxInvalidMacOUIAP, wlsxTrapTunnelDownReason=wlsxTrapTunnelDownReason, wlsxTrapAPLocation=wlsxTrapAPLocation, wlsxWEPMisconfiguration=wlsxWEPMisconfiguration, wlsxNAccessPointIsUp=wlsxNAccessPointIsUp, aiTrapObjectsGroup=aiTrapObjectsGroup, wlsxFrameNonUnicastRateExceeded=wlsxFrameNonUnicastRateExceeded, aiAPMemoryFree=aiAPMemoryFree, wlsxTrapUpdateFailedObj=wlsxTrapUpdateFailedObj, wlsxWeakWEPIVViolation=wlsxWeakWEPIVViolation, wlsxTrapTableGenNumber=wlsxTrapTableGenNumber, wlsxTrapSwitchRole=wlsxTrapSwitchRole, aiVirtualControllerVersion=aiVirtualControllerVersion, wlsxTrapSpoofedOldPhyAddress=wlsxTrapSpoofedOldPhyAddress, aiAPName=aiAPName, aiWlanTxDataBytes=aiWlanTxDataBytes, wlsxTrapDBType=wlsxTrapDBType, wlsxTrapOperStatus=wlsxTrapOperStatus, wlsxChannelRateAnomaly=wlsxChannelRateAnomaly, wlsxNUserEntryDeAuthenticated=wlsxNUserEntryDeAuthenticated, wlsxCTSRateAnomaly=wlsxCTSRateAnomaly, wlsxRTSRateAnomaly=wlsxRTSRateAnomaly, ArubaHashAlgorithms=ArubaHashAlgorithms, wlsxMalformedAssocReqDetected=wlsxMalformedAssocReqDetected, wlsxTrapVrrpOperState=wlsxTrapVrrpOperState, wlsxUserEntryAttributesChanged=wlsxUserEntryAttributesChanged, wlsxTrapAPManagedModeConfigFailure=wlsxTrapAPManagedModeConfigFailure, wlsxValidClientMisassociation=wlsxValidClientMisassociation, ArubaVlanValidRange=ArubaVlanValidRange, ArubaPortMode=ArubaPortMode, wlsxTrapAdminStatus=wlsxTrapAdminStatus, wlsxTrapMasterName=wlsxTrapMasterName, wlsxHT40MHzIntoleranceAP=wlsxHT40MHzIntoleranceAP, wlsxTrapUserName=wlsxTrapUserName, wlsxTrapHostPort=wlsxTrapHostPort, ArubaOperStateValue=ArubaOperStateValue, wlsxTrapStationBlackListReason=wlsxTrapStationBlackListReason, wlsxTrapTunnelUpReason=wlsxTrapTunnelUpReason, wlsxAPWiredContainment=wlsxAPWiredContainment, wlsxEAPRateAnomaly=wlsxEAPRateAnomaly, aiRadioEntry=aiRadioEntry, ArubaDBType=ArubaDBType, wlsxMalformedFrameWrongChannelDetected=wlsxMalformedFrameWrongChannelDetected, wlsxPowerSaveDosAttack=wlsxPowerSaveDosAttack, wlsxSignAPNullProbeResp=wlsxSignAPNullProbeResp, ArubaPoeState=ArubaPoeState, wlsxTrapPortalServerAddress=wlsxTrapPortalServerAddress, wlsxTrapVoltageValue=wlsxTrapVoltageValue, wlsxWindowsBridgeDetected=wlsxWindowsBridgeDetected, aiAPCPUUtilization=aiAPCPUUtilization, wlsxAdhocNetwork=wlsxAdhocNetwork, ArubaUnprovisionedStatus=ArubaUnprovisionedStatus, wlsxAPInterferenceDetected=wlsxAPInterferenceDetected, wlsxNSignatureMatchAsleap=wlsxNSignatureMatchAsleap, wlsxWarmStart=wlsxWarmStart, wlsxTrapTargetAPSSID=wlsxTrapTargetAPSSID, wlsxNodeRateAnomalySta=wlsxNodeRateAnomalySta, aiAPSerialNum=aiAPSerialNum, aiClientRxDataFrames=aiClientRxDataFrames, aiClientTxDataFrames=aiClientTxDataFrames, wlsxTrapAPTxPower=wlsxTrapAPTxPower, wlsxAdhocNetworkBridgeDetectedSta=wlsxAdhocNetworkBridgeDetectedSta, wlsxWPAMisconfiguration=wlsxWPAMisconfiguration, ArubaCallStates=ArubaCallStates, wlsxFrameLowSpeedRateExceeded=wlsxFrameLowSpeedRateExceeded, wlsxTrapDBUserName=wlsxTrapDBUserName, wlsxTrapPortalServerDownReason=wlsxTrapPortalServerDownReason, wlsxTrapRogueIfoURL=wlsxTrapRogueIfoURL, ArubaACLDomain=ArubaACLDomain, ArubaEncryptionType=ArubaEncryptionType, wlsxTrapLocalName=wlsxTrapLocalName, aiClientTxRate=aiClientTxRate, ArubaAntennaSetting=ArubaAntennaSetting, ArubaRogueApType=ArubaRogueApType, wlsxAdhocNetworkDetected=wlsxAdhocNetworkDetected, wlsxTrapDBIpAddress=wlsxTrapDBIpAddress, wlsxTrapTunnelStatus=wlsxTrapTunnelStatus, aiWlanSSIDEntry=aiWlanSSIDEntry, wlsxAPChannelChange=wlsxAPChannelChange, wlsxTrapApSerialNumber=wlsxTrapApSerialNumber, wlsxTrapAPBSSID=wlsxTrapAPBSSID, wlsxTrapMatchedIp=wlsxTrapMatchedIp, aiClientSNR=aiClientSNR, ArubaMonEncryptionCipher=ArubaMonEncryptionCipher, wlsxSuspectUnsecureAPDetected=wlsxSuspectUnsecureAPDetected, aiSSIDStatus=aiSSIDStatus, wlsxNAuthServerTimedOut=wlsxNAuthServerTimedOut, ArubaAuthServerType=ArubaAuthServerType, wlsxSignStaAsleap=wlsxSignStaAsleap, wlsxStaImpersonation=wlsxStaImpersonation, wlsxHtGreenfieldSupported=wlsxHtGreenfieldSupported, wlsxTrapCaName=wlsxTrapCaName, ArubaSupportStatus=ArubaSupportStatus, wlsxNStationRemovedFromBlackList=wlsxNStationRemovedFromBlackList, wlsxNAuthServerAcctTimedOut=wlsxNAuthServerAcctTimedOut, aiClientIP=aiClientIP, ArubaEnableValue=ArubaEnableValue, ArubaDot1dState=ArubaDot1dState, aiClientEntry=aiClientEntry, wlsxNAdhocNetwork=wlsxNAdhocNetwork, wlsxStaInterferenceDetected=wlsxStaInterferenceDetected, aiWlanESSID=aiWlanESSID, wlsxChannelInterferenceCleared=wlsxChannelInterferenceCleared, aiAPMACAddress=aiAPMACAddress, wlsxTrapUserAttributeChangeType=wlsxTrapUserAttributeChangeType, wlsxShortPreableMisconfiguration=wlsxShortPreableMisconfiguration, ArubaAddressType=ArubaAddressType, wlsxSignStaDeauthBcast=wlsxSignStaDeauthBcast, wlsxDisconnectStationAttackAP=wlsxDisconnectStationAttackAP, aiAPModel=aiAPModel, wlsxTrapESIServerIpAddress=wlsxTrapESIServerIpAddress, wlsxReservedChannelViolation=wlsxReservedChannelViolation, wlsxTrapCTSURL=wlsxTrapCTSURL, wlsxDisconnectStationAttack=wlsxDisconnectStationAttack, wlsxNSignatureMatchWellenreiter=wlsxNSignatureMatchWellenreiter, wlsxValidSSIDViolation=wlsxValidSSIDViolation, wlsxClientTaggedWiredContainment=wlsxClientTaggedWiredContainment, ArubaAPUplinkChangeReason=ArubaAPUplinkChangeReason, wlsxSignatureMatchSta=wlsxSignatureMatchSta, aiRadioUtilization4=aiRadioUtilization4, aiRadioUtilization64=aiRadioUtilization64, wlsxTrapAPName=wlsxTrapAPName)
