#
# PySNMP MIB module WLSX-MESH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/lloyd.williams/u01/snmp/mibdump/asn1/WLSX-MESH-MIB
# Produced by pysmi-0.3.4 at Tue Jan 31 16:13:56 2023
# On host COMP-C02DW0E1ML87 platform Darwin version 21.6.0 by user lloyd.williams
# Using Python version 3.11.1 (v3.11.1:a7a450f84a, Dec  6 2022, 15:24:06) [Clang 13.0.0 (clang-1300.0.29.30)]
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaPhyType, ArubaEncryptionMethods, ArubaMeshRole = mibBuilder.importSymbols("ARUBA-TC", "ArubaPhyType", "ArubaEncryptionMethods", "ArubaMeshRole")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Bits, Integer32, MibIdentifier, iso, ModuleIdentity, IpAddress, Counter64, TimeTicks, ObjectIdentity, NotificationType, Counter32, snmpModules = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Bits", "Integer32", "MibIdentifier", "iso", "ModuleIdentity", "IpAddress", "Counter64", "TimeTicks", "ObjectIdentity", "NotificationType", "Counter32", "snmpModules")
DateAndTime, TimeInterval, StorageType, RowStatus, TDomain, TextualConvention, DisplayString, TestAndIncr, MacAddress, PhysAddress, TAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TimeInterval", "StorageType", "RowStatus", "TDomain", "TextualConvention", "DisplayString", "TestAndIncr", "MacAddress", "PhysAddress", "TAddress", "TruthValue")
wlanAPMacAddress, = mibBuilder.importSymbols("WLSX-WLAN-MIB", "wlanAPMacAddress")
wlsxMeshMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13))
wlsxMeshMIB.setRevisions(('1907-08-06 05:18',))
if mibBuilder.loadTexts: wlsxMeshMIB.setLastUpdated('0708060518Z')
if mibBuilder.loadTexts: wlsxMeshMIB.setOrganization('Aruba Wireless Networks')
wlsxMeshInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1))
wlsxMeshNodeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1))
wlsxMeshNodeTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeTotal.setStatus('current')
wlsxMeshNodeTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2), )
if mibBuilder.loadTexts: wlsxMeshNodeTable.setStatus('current')
wlsxMeshNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanAPMacAddress"))
if mibBuilder.loadTexts: wlsxMeshNodeEntry.setStatus('current')
wlsxMeshRole = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 1), ArubaMeshRole()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxMeshRole.setStatus('current')
wlsxMeshNodeParent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeParent.setStatus('current')
wlsxMeshNodeChildrenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeChildrenCount.setStatus('current')
wlsxMeshNodeCluster = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeCluster.setStatus('current')
wlsxMeshNodeRfBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 5), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeRfBand.setStatus('current')
wlsxMeshNodePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodePathCost.setStatus('current')
wlsxMeshNodeNodeCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeNodeCost.setStatus('current')
wlsxMeshNodeLinkCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeLinkCost.setStatus('current')
wlsxMeshNodeHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeHopCount.setStatus('current')
wlsxMeshSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshSNR.setStatus('current')
wlsxMeshTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshTxRate.setStatus('current')
wlsxMeshRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshRxRate.setStatus('current')
wlsxMeshUplinkAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshUplinkAge.setStatus('current')
wlsxMeshNumRecoveryChildren = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNumRecoveryChildren.setStatus('current')
wlsxMeshTopologyUpdateAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshTopologyUpdateAge.setStatus('current')
wlsxMeshIsRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshIsRecovery.setStatus('current')
wlsxMeshIs11n = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshIs11n.setStatus('current')
mibBuilder.exportSymbols("WLSX-MESH-MIB", wlsxMeshNodeCluster=wlsxMeshNodeCluster, wlsxMeshNodeRfBand=wlsxMeshNodeRfBand, wlsxMeshTxRate=wlsxMeshTxRate, wlsxMeshRole=wlsxMeshRole, wlsxMeshMIB=wlsxMeshMIB, wlsxMeshNodePathCost=wlsxMeshNodePathCost, wlsxMeshInfoGroup=wlsxMeshInfoGroup, wlsxMeshNodeGroup=wlsxMeshNodeGroup, wlsxMeshNumRecoveryChildren=wlsxMeshNumRecoveryChildren, wlsxMeshNodeHopCount=wlsxMeshNodeHopCount, wlsxMeshUplinkAge=wlsxMeshUplinkAge, wlsxMeshNodeTotal=wlsxMeshNodeTotal, wlsxMeshNodeChildrenCount=wlsxMeshNodeChildrenCount, wlsxMeshNodeParent=wlsxMeshNodeParent, PYSNMP_MODULE_ID=wlsxMeshMIB, wlsxMeshRxRate=wlsxMeshRxRate, wlsxMeshNodeEntry=wlsxMeshNodeEntry, wlsxMeshNodeNodeCost=wlsxMeshNodeNodeCost, wlsxMeshTopologyUpdateAge=wlsxMeshTopologyUpdateAge, wlsxMeshIsRecovery=wlsxMeshIsRecovery, wlsxMeshNodeLinkCost=wlsxMeshNodeLinkCost, wlsxMeshNodeTable=wlsxMeshNodeTable, wlsxMeshIs11n=wlsxMeshIs11n, wlsxMeshSNR=wlsxMeshSNR)
